{"title":"前端常用utils工具方法小总结","uid":"6e4714c942a17b3887506964ab896786","slug":"js/前端常用utils工具方法小总结","date":"2024-04-17T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/js/前端常用utils工具方法小总结.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/47.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前端常用utils工具方法小总结</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">\n&#x2F;&#x2F; 数组去重\nconst uniqueArray &#x3D; arr &#x3D;&gt; [...new Set(arr)];\n\n&#x2F;&#x2F; 从url获取参数，并且转换成对象\nconst getParameters &#x3D; URL &#x3D;&gt; JSON.parse(&#96;&#123;&quot;$&#123;decodeURI(URL.split(&quot;?&quot;)[1]).replace(&#x2F;&quot;&#x2F;g, &#39;\\&quot;&#39;).replace(&#x2F;&amp;&#x2F;g, &#39;&quot;,&quot;&#39;).replace(&#x2F;&#x3D;&#x2F;g, &#39;&quot;:&quot;&#39;)&#125;&quot;&#125;&#96;)\n\n&#x2F;&#x2F;检查对象是否为空\nconst isEmpty &#x3D; obj &#x3D;&gt; Reflect.ownKeys(obj).length &#x3D;&#x3D;&#x3D; 0 &amp;&amp; obj.constructor &#x3D;&#x3D;&#x3D; Object\n&#x2F;&#x2F;检查是否为对象\nconst isObject &#x3D; obj &#x3D;&gt; !(Object.keys(obj).length &#x3D;&#x3D;&#x3D; 0)\n\n&#x2F;&#x2F;字符串反转\nconst reverseString &#x3D; str &#x3D;&gt; str.split(&#39;&#39;).reverse().join(&#39;&#39;)\n\n&#x2F;&#x2F;随机生成十六进制颜色值\nconst randomHexColor &#x3D; () &#x3D;&gt; &#96;#$&#123;Math.floor(Math.random() * 0xffffff).toString(16).padEnd(6, &#39;0&#39;)&#125;&#96;\n\n&#x2F;&#x2F;检查当前选项卡是否在后台\nconst isTabActive &#x3D; () &#x3D;&gt; !document.hidden;\n\n&#x2F;&#x2F;检查元素是否处于焦点\nconst eleIsInFocus &#x3D; el &#x3D;&gt; (el.document.activeElement)\n\n&#x2F;&#x2F;检查设备类型\nconst judgeDeviceType &#x3D; () &#x3D;&gt; &#x2F;Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|OperaMini&#x2F;i.test(navigator.userAgent) ? &#39;Mobile&#39; : &#39;PC&#39;;\n\n&#x2F;&#x2F;文字复制到剪切板\nconst copyText &#x3D; async text &#x3D;&gt; await navigator.clipboard.writeText(text)\n\n&#x2F;&#x2F; 返回选中的内容\nconst getSelectedText &#x3D; () &#x3D;&gt; window.getSelection().toString();\n\n&#x2F;&#x2F;查询某天是否为工作日\nconst isWeekday &#x3D; (date) &#x3D;&gt; date.getDay() % 6 !&#x3D;&#x3D; 0;\n\n&#x2F;&#x2F;两日期之间相差的天数\nconst dayDiff &#x3D; (date1, date2) &#x3D;&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) &#x2F; 86400000);\n\n&#x2F;&#x2F;检查日期是否有效\nconst isDateValid &#x3D; (...val) &#x3D;&gt; !Number.isNaN(new Date(...val).valueOf());\n\n&#x2F;&#x2F; 计算两个日期之间的间隔\nconst dayDif &#x3D; (date1, date2) &#x3D;&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) &#x2F; 86400000)\n\n&#x2F;&#x2F;查找日期位于一年中的第几天\nconst dayOfYear &#x3D; (date) &#x3D;&gt; Math.floor((date - new Date(date.getFullYear(), 0, 0)) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24);\n\n&#x2F;&#x2F;时间格式化\nconst timeFromDate &#x3D; date &#x3D;&gt; date.toTimeString().slice(0, 8);\n\n&#x2F;&#x2F;字符串首字母大小\nconst firstUpper &#x3D; str &#x3D;&gt; str.charAt(0).toUpperCase() + str.slice(1);\n\n&#x2F;&#x2F;随机字符串\nconst randomString &#x3D; () &#x3D;&gt; Math.random().toString(36).slice(2)\n\n&#x2F;&#x2F;去除字符串中的html\nconst striphtml &#x3D; html &#x3D;&gt; html(new DOMParser().parseFromString(html, &#39;text&#x2F;html&#39;).body.textContent || &#39;&#39;)\n\n&#x2F;&#x2F;判断数组是否为空\nconst isNotEmpty &#x3D; array &#x3D;&gt; Array.isArray(array) &amp;&amp; array.length &gt; 0\n\n&#x2F;&#x2F;合并两个数组\nconst merge &#x3D; (a, b) &#x3D;&gt; a.concat(b)\nconst mergeArr &#x3D; (a, b) &#x3D;&gt; [...a, ...b]\n\n&#x2F;&#x2F;获取一组数据的平均值\nconst average &#x3D; (...args) &#x3D;&gt; args.reduce((a, b) &#x3D;&gt; a + b) &#x2F; args.length\n\n&#x2F;&#x2F;取两个整数之间的随机值\nconst randomNumber &#x3D; (min, max) &#x3D;&gt; Math.floor(Math.random() * (max - min + 1) + min)\n\n&#x2F;&#x2F;指定位数的四舍五入\nconst roundNumber &#x3D; (n, d) &#x3D;&gt; Number(Math.round(n + &quot;e&quot; + d) + &#39;e-&#39; + d)\n\n&#x2F;&#x2F;将RGB转化为十六机制\nconst rgbaToHex &#x3D; (r, g, b, a) &#x3D;&gt; &quot;#&quot; + ((1 &lt;&lt; 24) + (r &lt;&lt; 16) + (g &lt;&lt; 8) + b).toString(16).slice(1)\n\n&#x2F;&#x2F;清除所以cookie\nconst clearCookies &#x3D; document.cookie.split(&#39;;&#39;).forEach(cookie &#x3D;&gt; document.cookie &#x3D; cookie.replace(&#x2F;^ +&#x2F;, &#39;&#39;).replace(&#x2F;&#x3D;.*&#x2F;, &#96;&#x3D;;expires&#x3D;$&#123;new Date(0).toUTCString()&#125;;path&#x3D;&#x2F;&#96;));\n\n&#x2F;&#x2F;检测是否是黑暗模式\nconst isDarkMode &#x3D; window.matchMedia &amp;&amp; window.matchMedia(&#39;(prefers-color-scheme: dark)&#39;).matches\n\n&#x2F;&#x2F;滚动到顶部\nconst goToTop &#x3D; () &#x3D;&gt; window.screenTop(0, 0)\n\n&#x2F;&#x2F;判断是否滚动到底部\nconst scrolledToBottom &#x3D; () &#x3D;&gt; document.documentElement.clientHeight + window.scrollY &gt;&#x3D; document.documentElement.scrollHeight;\n\n&#x2F;&#x2F;重定向到一个url\nconst redirectToUrl &#x3D; (url) &#x3D;&gt; window.location.href &#x3D; url\n\n&#x2F;&#x2F;打开浏览器的打印页面\nconst showPrintDialog &#x3D; () &#x3D;&gt; window.print()\n\n&#x2F;&#x2F;随机布尔值\nconst randomBoolean &#x3D; () &#x3D;&gt; Math.random() &gt;&#x3D; 0.5\n\n&#x2F;&#x2F;变量交换\nlet a &#x3D; 1, b &#x3D; 2;\n[a, b] &#x3D; [b, a]\n\n&#x2F;&#x2F;获取变量的类型\nconst trueTypeOf &#x3D; (obj) &#x3D;&gt; Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n\n</code></pre>\n\n<h1 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h1><p>定义：n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;处理任务，和等待时间\nfunction debounce(fn, delay)&#123;\n     let timerId &#x3D; null\n     return function()&#123;\n         const context &#x3D; this\n         &#x2F;&#x2F;如果接到订单就再等3分钟\n         if(timerId)&#123;window.clearTimeout(timerId)&#125;\n         &#x2F;&#x2F;3分钟没有接到订单就直接配送\n         timerId &#x3D; setTimeout(()&#x3D;&gt;&#123;\n             fn.apply(context, arguments)\n             timerId &#x3D; null\n         &#125;,delay)\n     &#125;\n &#125;\n</code></pre>\n\n<h1 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h1><p>定义：n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>节流就是指连续触发事件但是在 n 秒中只执行一次函数。节流会稀释函数的执行频率</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const debouncer &#x3D; (fn, time, interval &#x3D; 200) &#x3D;&gt; &#123;\n  if (time - (window.debounceTimestamp || 0) &gt; interval) &#123;\n    fn &amp;&amp; fn();\n    window.debounceTimestamp &#x3D; time;\n  &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function throttle(fn, delay)&#123;\n     &#x2F;&#x2F; 设置一个触发开关\n     let canUse &#x3D; true\n     return function()&#123;\n     &#x2F;&#x2F;如果为true，就触发技能，否则就不能触发\n         if(canUse)&#123;\n             fn.apply(this, arguments)\n             &#x2F;&#x2F;触发技能后，关闭开关\n             canUse &#x3D; false\n             &#x2F;&#x2F;在3秒后打开开关\n             setTimeout(()&#x3D;&gt;canUse &#x3D; true, delay)\n         &#125;\n     &#125;\n &#125;\n</code></pre>\n\n<h1 id=\"cookie工具方法\"><a href=\"#cookie工具方法\" class=\"headerlink\" title=\"cookie工具方法\"></a>cookie工具方法</h1><p>设置cookie</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function setCookieItem(sKey, sValue, vEnd, sPath, sDomain, bSecure) &#123;\n    if (!sKey || &#x2F;^(?:expires|max-age|path|domain|secure)$&#x2F;i.test(sKey)) &#123;\n        return false;\n    &#125;\n    var sExpires &#x3D; &quot;&quot;;\n    if (vEnd) &#123;\n        switch (vEnd.constructor) &#123;\n            case Number:\n                sExpires &#x3D; vEnd &#x3D;&#x3D;&#x3D; Infinity \n                    ? &quot;; expires&#x3D;Fri, 31 Dec 9999 23:59:59 GMT&quot; \n                  : &quot;; max-age&#x3D;&quot; + vEnd;\n                break;\n            case String:\n                sExpires &#x3D; &quot;; expires&#x3D;&quot; + vEnd;\n                break;\n            case Date:\n                sExpires &#x3D; &quot;; expires&#x3D;&quot; + vEnd.toUTCString();\n                break;\n        &#125;\n    &#125;\n    document.cookie &#x3D; encodeURIComponent(sKey) \n        + &quot;&#x3D;&quot; + encodeURIComponent(sValue) \n        + sExpires \n        + (sDomain ? &quot;; domain&#x3D;&quot; + sDomain : &quot;&quot;) \n        + (sPath ? &quot;; path&#x3D;&quot; + sPath : &quot;&quot;) \n        + (bSecure ? &quot;; secure&quot; : &quot;&quot;);\n    return true;\n&#125;</code></pre>\n\n<p>判断cookie是否存在</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function isCookieItemExisted(sKey) &#123;\n    return new RegExp(&quot;(?:^|;\\s*)&quot; + encodeURIComponent(sKey).replace(&#x2F;[-.+*]&#x2F;g, &quot;\\$&amp;&quot;) + &quot;\\s*\\&#x3D;&quot;).test(document.cookie);\n&#125;</code></pre>\n\n<p>删除cookie</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function removeCookieItem(sKey, sPath, sDomain) &#123;\n    if (!sKey || !isCookieItemExisted(sKey)) &#123;\n        return false;\n    &#125;\n    document.cookie &#x3D; encodeURIComponent(sKey) \n        + &quot;&#x3D;; expires&#x3D;Thu, 01 Jan 1970 00:00:00 GMT&quot; \n        + (sDomain ? &quot;; domain&#x3D;&quot; + sDomain : &quot;&quot;) \n        + (sPath ? &quot;; path&#x3D;&quot; + sPath : &quot;&quot;);\n    return true;\n&#125;</code></pre>\n\n<p>查找cookie</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">function getCookieByKey(sKey) &#123;\n    return decodeURIComponent(document.cookie.replace(new RegExp(&quot;(?:(?:^|.*;)\\s*&quot; + encodeURIComponent(sKey).replace(&#x2F;[-.+*]&#x2F;g, &quot;\\$&amp;&quot;) + &quot;\\s*\\&#x3D;\\s*([^;]*).*$)|^.*$&quot;), &quot;$1&quot;)) || null;\n  &#125;,</code></pre>\n\n<h1 id=\"localhostStorage工具方法\"><a href=\"#localhostStorage工具方法\" class=\"headerlink\" title=\"localhostStorage工具方法\"></a>localhostStorage工具方法</h1><p>设置localStorage</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const setStore &#x3D; (params &#x3D; &#123;&#125;) &#x3D;&gt; &#123;\n    let &#123;\n        name,\n        content,\n        type,\n    &#125; &#x3D; params;\n    name &#x3D; keyName + name\n    let obj &#x3D; &#123;\n        dataType: typeof (content),\n        content: content,\n        type: type,\n        datetime: new Date().getTime()\n    &#125;\n    if (type) window.sessionStorage.setItem(name, JSON.stringify(obj));\n    else window.localStorage.setItem(name, JSON.stringify(obj));\n&#125;</code></pre>\n\n<p>获取localStorage</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const getStore &#x3D; (params &#x3D; &#123;&#125;) &#x3D;&gt; &#123;\n    let &#123;\n        name,\n        debug\n    &#125; &#x3D; params;\n    name &#x3D; keyName + name\n    let obj &#x3D; &#123;&#125;,\n        content;\n    obj &#x3D; window.sessionStorage.getItem(name);\n    if (validatenull(obj)) obj &#x3D; window.localStorage.getItem(name);\n    if (validatenull(obj)) return;\n    try &#123;\n        obj &#x3D; JSON.parse(obj);\n    &#125; catch &#123;\n        return obj;\n    &#125;\n    if (debug) &#123;\n        return obj;\n    &#125;\n    if (obj.dataType &#x3D;&#x3D; &#39;string&#39;) &#123;\n        content &#x3D; obj.content;\n    &#125; else if (obj.dataType &#x3D;&#x3D; &#39;number&#39;) &#123;\n        content &#x3D; Number(obj.content);\n    &#125; else if (obj.dataType &#x3D;&#x3D; &#39;boolean&#39;) &#123;\n        content &#x3D; eval(obj.content);\n    &#125; else if (obj.dataType &#x3D;&#x3D; &#39;object&#39;) &#123;\n        content &#x3D; obj.content;\n    &#125;\n    return content;\n&#125;\n</code></pre>\n\n<p>删除localStorage</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export const removeStore &#x3D; (params &#x3D; &#123;&#125;) &#x3D;&gt; &#123;\n    let &#123;\n        name,\n        type\n    &#125; &#x3D; params;\n    name &#x3D; keyName + name\n    if (type) &#123;\n        window.sessionStorage.removeItem(name);\n    &#125; else &#123;\n        window.localStorage.removeItem(name);\n    &#125;\n&#125;\n</code></pre>\n\n<p>获取全部local Storage</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const getAllStore &#x3D; (params &#x3D; &#123;&#125;) &#x3D;&gt; &#123;\n    let list &#x3D; [];\n    let &#123;\n        type\n    &#125; &#x3D; params;\n    if (type) &#123;\n        for (let i &#x3D; 0; i &lt;&#x3D; window.sessionStorage.length; i++) &#123;\n            list.push(&#123;\n                name: window.sessionStorage.key(i),\n                content: getStore(&#123;\n                    name: window.sessionStorage.key(i),\n                    type: &#39;session&#39;\n                &#125;)\n            &#125;)\n        &#125;\n    &#125; else &#123;\n        for (let i &#x3D; 0; i &lt;&#x3D; window.localStorage.length; i++) &#123;\n            list.push(&#123;\n                name: window.localStorage.key(i),\n                content: getStore(&#123;\n                    name: window.localStorage.key(i),\n                &#125;)\n            &#125;)\n        &#125;\n    &#125;\n    return list;\n&#125;</code></pre>\n\n<p>清空全部local Storage</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export const clearStore &#x3D; (params &#x3D; &#123;&#125;) &#x3D;&gt; &#123;\n    let &#123;\n        type\n    &#125; &#x3D; params;\n    if (type) &#123;\n        window.sessionStorage.clear();\n    &#125; else &#123;\n        window.localStorage.clear()\n    &#125;\n&#125;</code></pre>\n\n<h1 id=\"时间转换\"><a href=\"#时间转换\" class=\"headerlink\" title=\"时间转换\"></a>时间转换</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">function getdate(date) &#123;\n    var now &#x3D; new Date(date),\n        y &#x3D; now.getFullYear(),\n        m &#x3D; now.getMonth() + 1,\n        d &#x3D; now.getDate();\n    return y + &#39;-&#39; + (m &lt; 10 ? &#39;0&#39; + m : m) + &#39;-&#39; + (d &lt; 10 ? &#39;0&#39; + d : d) + &#39; &#39; + now.toTimeString().substr(0, 8);\n&#125;</code></pre>","feature":false,"text":" 前端常用utils工具方法小总结 &#x2F;&#x2F; 数组去重 const uniqueArray &#x3D; arr &#x3D;&gt; [...new Set(arr)]; &#x2F;&#x2F; 从url获取参数，并且转换成对象 const getParame...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"前端","slug":"前端","count":5,"path":"api/categories/前端.json"}],"tags":[{"name":"工具方法","slug":"工具方法","count":1,"path":"api/tags/工具方法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%98%B2%E6%8A%96\"><span class=\"toc-text\">防抖</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8A%82%E6%B5%81\"><span class=\"toc-text\">节流</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#cookie%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">cookie工具方法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#localhostStorage%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">localhostStorage工具方法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">时间转换</span></a></li></ol>","author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"mapped":true,"prev_post":{"title":"Vue3之状态管理：Vuex和Pinia，孰强孰弱？","uid":"d139f4f2bd842ae73bfb9ae3f3922047","slug":"vue/Vue3之状态管理：Vuex和Pinia，孰强孰弱？","date":"2023-03-14T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/vue/Vue3之状态管理：Vuex和Pinia，孰强孰弱？.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/34.png","text":" 什么是状态管理在介绍Vuex和Pinia之前，我们有必要先了解一下什么是状态管理。 在前端开发中，状态管理器是一种用于管理应用程序全局状态的工具。它通常用于大型应用程序，可以帮助开发者更好地组织和管理状态，并提供一些强大的工具来简化状态的变更和使用。 前端常用的状态管理库以下是...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"pinia","slug":"pinia","count":1,"path":"api/categories/pinia.json"}],"tags":[{"name":"pinia vuex","slug":"pinia-vuex","count":1,"path":"api/tags/pinia-vuex.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":true},"next_post":{"title":"Three.js深入浅出：4-three.js中的光源","uid":"e7d4321320711fd3eb23409ba53d32b8","slug":"threeJS/Three.js深入浅出：4-three.js中的光源","date":"2023-12-19T14:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/threeJS/Three.js深入浅出：4-three.js中的光源.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/2.jpeg","text":"序言： 在现代互联网时代，Web 技术的快速发展使得 Web 开发领域日新月异。随着互联网内容变得越来越丰富、复杂，用户对于网页和应用程序的交互性和视觉效果提出了更高的要求。在这样的背景下，基于 WebGL 的 3D 图形技术越来越受到关注和重视。 而在众多的 3D 图形库中，T...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"three.js","slug":"three-js","count":1,"path":"api/categories/three-js.json"}],"tags":[{"name":"前端 webGL three.js","slug":"前端-webGL-three-js","count":1,"path":"api/tags/前端-webGL-three-js.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":false}}