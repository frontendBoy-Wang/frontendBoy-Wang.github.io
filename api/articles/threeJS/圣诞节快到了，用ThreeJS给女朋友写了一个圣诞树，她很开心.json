{"title":"圣诞节快到了，用ThreeJS给女朋友写了一个圣诞树🎄，她很开心","uid":"529493b0860c50168557a46de0bc5502","slug":"threeJS/圣诞节快到了，用ThreeJS给女朋友写了一个圣诞树，她很开心","date":"2023-12-30T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/threeJS/圣诞节快到了，用ThreeJS给女朋友写了一个圣诞树，她很开心.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/0.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>转眼间又是一年快要结束了，马上圣诞节🎄就快到了。给女朋友(没有女朋友的就自己new一个吧🙈)写一个圣诞树让她开心一下吧</p></blockquote>\n<h1 id=\"使用什么技术写\"><a href=\"#使用什么技术写\" class=\"headerlink\" title=\"使用什么技术写\"></a>使用什么技术写</h1><p>一开始我准备用html+css去写，后来感觉使用html和css写就太low了，没有一点点心意。就打算用three.js写一个3d版本的。</p>\n<h2 id=\"简单介绍一下threejs\"><a href=\"#简单介绍一下threejs\" class=\"headerlink\" title=\"简单介绍一下threejs\"></a>简单介绍一下threejs</h2><p>Three.js是一个基于原生WebGL封装运行的三维引擎，是最著名的3D WebGL JavaScriptThree.js是一个基于原生WebGL封装运行的三维引擎，是最著名的3D WebGL JavaScript库之一。它是一个让用户通过JavaScript入手进入搭建WebGL项目的类库。Three.js提供了许多简单易用的API，使得开发者能够更加方便地创建复杂的3D场景。</p>\n<p>WebGL是一个只能画点、线和三角形的非常底层的系统。而Three.js则在此基础之上进行了封装，提供了一系列的图形处理功能，如渲染器、相机、灯光、材质等，以及各种几何体、粒子系统等，极大地简化了3D图形编程的难度。这使得学习WebGL需要图形学知识的要求得以降低，因为开发者可以直接通过使用Three.js提供的JS和GLSL两种语言来构建和呈现3D图形。</p>\n<h1 id=\"实现具体步骤\"><a href=\"#实现具体步骤\" class=\"headerlink\" title=\"实现具体步骤\"></a>实现具体步骤</h1><p>首先，我们需要在HTML文件中引入Three.js库。你可以在Three.js官方网站下载最新版本的库，或者直接从CDN获取。将以下代码添加到你的HTML文件的<code>&lt;head&gt;</code>部分：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;three.js&#x2F;r128&#x2F;three.min.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n\n<p>接下来，我们将开始编写JavaScript代码来创建场景、相机、渲染器以及圣诞树的各个部分。首先，我们创建一个场景对象，并设置其背景颜色为深绿色：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let scene &#x3D; new THREE.Scene();\nscene.background &#x3D; new THREE.Color(0x002633);</code></pre>\n\n<p>然后，我们创建一个透视相机，并将其位置设置为距离场景中心一定距离的位置。我们还设置了相机的视野范围和纵横比：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let camera &#x3D; new THREE.PerspectiveCamera(75, window.innerWidth &#x2F; window.innerHeight, 0.1, 1000);\ncamera.position.z &#x3D; 5;</code></pre>\n\n<p>接下来，我们创建一个WebGL渲染器，并将其大小设置为浏览器窗口的大小。然后，我们将渲染器的DOM元素添加到页面中：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let renderer &#x3D; new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);</code></pre>\n\n<p>现在，我们可以开始创建圣诞树的各个部分了。首先，我们创建一个树干，它是一个圆柱体：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let trunkGeometry &#x3D; new THREE.CylinderGeometry(0.2, 0.4, 1.6, 8);\nlet trunk &#x3D; new THREE.Mesh(trunkGeometry, brownMaterial);\nscene.add(trunk);</code></pre>\n\n<p>接着，我们创建一个树叶，它是一个圆锥体：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let leavesGeometry &#x3D; new THREE.ConeGeometry(1.2, 2.4, 8);\nlet leaves &#x3D; new THREE.Mesh(leavesGeometry, greenMaterial);\nleaves.position.y &#x3D; 1.6;\nscene.add(leaves);</code></pre>\n\n<p>然后，我们创建彩灯，它们是一些旋转的球体：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let lightGeometry &#x3D; new THREE.SphereGeometry(0.1, 4, 4);\nlet lights &#x3D; [];\nlet colors &#x3D; [redMaterial, yellowMaterial, new THREE.MeshBasicMaterial(&#123; color: 0x0000ff &#125;), new THREE.MeshBasicMaterial(&#123; color: 0x00ff00 &#125;)];\nlet angles &#x3D; [0, Math.PI &#x2F; 3, 2 * Math.PI &#x2F; 3, Math.PI, 4 * Math.PI &#x2F; 3, 5 * Math.PI &#x2F; 3];\nfor (let i &#x3D; 0; i &lt; angles.length; i++) &#123;\n    let light &#x3D; new THREE.Mesh(lightGeometry, colors[i % 4]);\n    light.position.set(Math.cos(angles[i]) * 0.9, 2.2, Math.sin(angles[i]) * 0.9);\n    scene.add(light);\n    lights.push(light);\n&#125;</code></pre>\n\n<p>接下来，我们创建一个星星，它是一些旋转的点：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let starGeometry &#x3D; new THREE.SphereGeometry(0.2, 4, 4);\nlet star &#x3D; new THREE.Mesh(starGeometry, yellowMaterial);\nstar.position.y &#x3D; 2.7;\nscene.add(star);</code></pre>\n\n<p>最后，我们创建一个礼物盒，它是一个立方体：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let giftGeometry &#x3D; new THREE.BoxGeometry(0.5, 0.5, 0.5);\nlet giftMaterials &#x3D; [\n    new THREE.MeshBasicMaterial(&#123; color: 0xff0000 &#125;),\n    new THREE.MeshBasicMaterial(&#123; color: 0x00ff00 &#125;),\n    new THREE.MeshBasicMaterial(&#123; color: 0x0000ff &#125;),\n    new THREE.MeshBasicMaterial(&#123; color: 0xffff00 &#125;),\n    new THREE.MeshBasicMaterial(&#123; color: 0xff00ff &#125;),\n    new THREE.MeshBasicMaterial(&#123; color: 0x00ffff &#125;)\n];\nlet giftMesh &#x3D; new THREE.Mesh(giftGeometry, giftMaterials);\ngiftMesh.position.set(0, -1.3, 0);\nscene.add(giftMesh);</code></pre>\n\n<p>为了给圣诞树增添一些雪花效果，我们还需要创建一个雪花几何体和一个雪花材质，然后将它们组合成一个雪花网格对象，并将其添加到场景中：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let snowFlakeGeometry &#x3D; new THREE.BufferGeometry();\nlet positions &#x3D; [];\nfor (let i &#x3D; 0; i &lt; 1000; i++) &#123;\n    positions.push(Math.random() * 2000 - 1000);\n    positions.push(Math.random() * 2000 - 1000);\n    positions.push(Math.random() * 2000 - 1000);\n&#125;\nsnowFlakeGeometry.setAttribute(&#39;position&#39;, new THREE.Float32BufferAttribute(positions, 3));\nlet snowFlakeMaterial &#x3D; new THREE.PointsMaterial(&#123; color: 0xffffff, size: 2 &#125;);\nlet snowFlake &#x3D; new THREE.Points(snowFlakeGeometry, snowFlakeMaterial);\nscene.add(snowFlake);</code></pre>\n\n<p>最后，我们需要添加一个渲染循环，以便不断地更新场景中的物体并渲染到屏幕上：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function animate() &#123;\n    requestAnimationFrame(animate);\n    trunk.rotation.y +&#x3D; 0.01;\n    leaves.rotation.y +&#x3D; 0.01;\n    for (let i &#x3D; 0; i &lt; lights.length; i++) &#123;\n        lights[i].rotation.y +&#x3D; 0.02;\n    &#125;\n    snowFlake.rotation.y -&#x3D; 0.001;\n    renderer.render(scene, camera);\n&#125;\nanimate();</code></pre>\n\n<p>这就是如何使用Three.js创建一个完整的圣诞树的全部过程。如果你有女朋友，可以尝试写一个哄女朋友开心一下</p>\n<p>最终效果：<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc7bb9ccf7fd4116858135cca27fd701~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2916&h=1712&s=144890&e=png&a=1&b=0b2532\" alt=\"image.png\"></p>\n<h1 id=\"所有代码\"><a href=\"#所有代码\" class=\"headerlink\" title=\"所有代码\"></a>所有代码</h1><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;es&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n    &lt;title&gt;完整的圣诞树&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123; margin: 0; &#125;\n        canvas &#123; display: block; &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;threejs.org&#x2F;build&#x2F;three.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script &gt;\n    &#x2F;&#x2F; 创建场景\n    let scene &#x3D; new THREE.Scene();\n\n    &#x2F;&#x2F; 添加背景颜色\n    scene.background &#x3D; new THREE.Color(0x002633);\n\n    &#x2F;&#x2F; 创建相机\n    let camera &#x3D; new THREE.PerspectiveCamera(75, window.innerWidth &#x2F; window.innerHeight, 0.1, 1000);\n    camera.position.z &#x3D; 5;\n\n    &#x2F;&#x2F; 创建渲染器\n    let renderer &#x3D; new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    &#x2F;&#x2F; 创建材质\n    let brownMaterial &#x3D; new THREE.MeshBasicMaterial(&#123; color: 0x7f4014 &#125;);\n    let greenMaterial &#x3D; new THREE.MeshBasicMaterial(&#123; color: 0x006400, transparent: true, opacity: 0.8 &#125;);\n    let redMaterial &#x3D; new THREE.MeshBasicMaterial(&#123; color: 0xff0000 &#125;);\n    let yellowMaterial &#x3D; new THREE.MeshBasicMaterial(&#123; color: 0xffff00 &#125;);\n\n    &#x2F;&#x2F; 创建树干\n    let trunkGeometry &#x3D; new THREE.CylinderGeometry(0.2, 0.4, 1.6, 8);\n    let trunk &#x3D; new THREE.Mesh(trunkGeometry, brownMaterial);\n    scene.add(trunk);\n\n    &#x2F;&#x2F; 创建树叶\n    let leavesGeometry &#x3D; new THREE.ConeGeometry(1.2, 2.4, 8);\n    let leaves &#x3D; new THREE.Mesh(leavesGeometry, greenMaterial);\n    leaves.position.y &#x3D; 1.6;\n    scene.add(leaves);\n\n    &#x2F;&#x2F; 创建彩灯\n    let lightGeometry &#x3D; new THREE.SphereGeometry(0.1, 4, 4);\n    let lights &#x3D; [];\n    let colors &#x3D; [redMaterial, yellowMaterial, new THREE.MeshBasicMaterial(&#123; color: 0x0000ff &#125;), new THREE.MeshBasicMaterial(&#123; color: 0x00ff00 &#125;)];\n    let angles &#x3D; [0, Math.PI &#x2F; 3, 2 * Math.PI &#x2F; 3, Math.PI, 4 * Math.PI &#x2F; 3, 5 * Math.PI &#x2F; 3];\n    for (let i &#x3D; 0; i &lt; angles.length; i++) &#123;\n        let light &#x3D; new THREE.Mesh(lightGeometry, colors[i % 4]);\n        light.position.set(Math.cos(angles[i]) * 0.9, 2.2, Math.sin(angles[i]) * 0.9);\n        scene.add(light);\n        lights.push(light);\n    &#125;\n\n    &#x2F;&#x2F; 创建星星\n    let starGeometry &#x3D; new THREE.SphereGeometry(0.2, 4, 4);\n    let star &#x3D; new THREE.Mesh(starGeometry, yellowMaterial);\n    star.position.y &#x3D; 2.7;\n    scene.add(star);\n\n    &#x2F;&#x2F; 创建礼物盒\n    let giftGeometry &#x3D; new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    let giftMaterials &#x3D; [\n        new THREE.MeshBasicMaterial(&#123; color: 0xff0000 &#125;),\n        new THREE.MeshBasicMaterial(&#123; color: 0x00ff00 &#125;),\n        new THREE.MeshBasicMaterial(&#123; color: 0x0000ff &#125;),\n        new THREE.MeshBasicMaterial(&#123; color: 0xffff00 &#125;),\n        new THREE.MeshBasicMaterial(&#123; color: 0xff00ff &#125;),\n        new THREE.MeshBasicMaterial(&#123; color: 0x00ffff &#125;)\n    ];\n    let giftMesh &#x3D; new THREE.Mesh(giftGeometry, giftMaterials);\n    giftMesh.position.set(0, -1.3, 0);\n    scene.add(giftMesh);\n\n    &#x2F;&#x2F; 添加雪花效果\n    let snowFlakeGeometry &#x3D; new THREE.BufferGeometry();\n    let positions &#x3D; [];\n    for (let i &#x3D; 0; i &lt; 1000; i++) &#123;\n        positions.push(Math.random() * 2000 - 1000);\n        positions.push(Math.random() * 2000 - 1000);\n        positions.push(Math.random() * 2000 - 1000);\n    &#125;\n    snowFlakeGeometry.setAttribute(&#39;position&#39;, new THREE.Float32BufferAttribute(positions, 3));\n    let snowFlakeMaterial &#x3D; new THREE.PointsMaterial(&#123; color: 0xffffff, size: 2 &#125;);\n    let snowFlake &#x3D; new THREE.Points(snowFlakeGeometry, snowFlakeMaterial);\n    scene.add(snowFlake);\n    \n\n    &#x2F;&#x2F; 渲染循环\n    function animate() &#123;\n        requestAnimationFrame(animate);\n        trunk.rotation.y +&#x3D; 0.01;\n        leaves.rotation.y +&#x3D; 0.01;\n        for (let i &#x3D; 0; i &lt; lights.length; i++) &#123;\n            lights[i].rotation.y +&#x3D; 0.02;\n        &#125;\n        snowFlake.rotation.y -&#x3D; 0.001;\n        renderer.render(scene, camera);\n    &#125;\n    animate();\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>","feature":true,"text":" 转眼间又是一年快要结束了，马上圣诞节🎄就快到了。给女朋友(没有女朋友的就自己new一个吧🙈)写一个圣诞树让她开心一下吧 使用什么技术写一开始我准备用html+css去写，后来感觉使用html和css写就太low了，没有一点点心意。就打算用three.js写一个3d版本的。 简单...","link":"","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"前端","slug":"前端","count":5,"path":"api/categories/前端.json"},{"name":"Three.JS","slug":"前端/Three-JS","count":1,"path":"api/categories/前端/Three-JS.json"}],"tags":[{"name":"前端 webGL WEB3d WebGIS","slug":"前端-webGL-WEB3d-WebGIS","count":1,"path":"api/tags/前端-webGL-WEB3d-WebGIS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E6%8A%80%E6%9C%AF%E5%86%99\"><span class=\"toc-text\">使用什么技术写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8Bthreejs\"><span class=\"toc-text\">简单介绍一下threejs</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">实现具体步骤</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%80%E6%9C%89%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">所有代码</span></a></li></ol>","author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"mapped":true,"prev_post":{"title":"2024年终总结","uid":"ce7691ff8f2ef9994a806e6cb0977c21","slug":"年终总结/2024年终总结","date":"2024-12-25T01:56:33.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/年终总结/2024年终总结.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/0.png","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"年终总结","slug":"年终总结","count":2,"path":"api/categories/年终总结.json"}],"tags":[{"name":"年终总结","slug":"年终总结","count":1,"path":"api/tags/年终总结.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":true},"next_post":{"title":"Vue3之状态管理：Vuex和Pinia，孰强孰弱？","uid":"d139f4f2bd842ae73bfb9ae3f3922047","slug":"vue/Vue3之状态管理：Vuex和Pinia，孰强孰弱？","date":"2023-03-14T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/vue/Vue3之状态管理：Vuex和Pinia，孰强孰弱？.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/34.png","text":" 什么是状态管理在介绍Vuex和Pinia之前，我们有必要先了解一下什么是状态管理。 在前端开发中，状态管理器是一种用于管理应用程序全局状态的工具。它通常用于大型应用程序，可以帮助开发者更好地组织和管理状态，并提供一些强大的工具来简化状态的变更和使用。 前端常用的状态管理库以下是...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"pinia","slug":"pinia","count":1,"path":"api/categories/pinia.json"}],"tags":[{"name":"pinia vuex","slug":"pinia-vuex","count":1,"path":"api/tags/pinia-vuex.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":true}}