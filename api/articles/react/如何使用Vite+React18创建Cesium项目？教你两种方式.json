{"title":"如何使用Vite+React18创建Cesium项目？教你两种方式","uid":"b7365f5ec90869bc85bd7fc53178f85a","slug":"react/如何使用Vite+React18创建Cesium项目？教你两种方式","date":"2022-07-30T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/react/如何使用Vite+React18创建Cesium项目？教你两种方式.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/40.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>书接上文，上篇文章介绍了<a href=\"https://juejin.cn/post/7247669025874247735\">《使用Vite+Vue3创建Cesium项目》</a>，感觉还是对很多小伙伴有帮助的，那么这篇文章就介绍一下使用Vite+React18创建Cesium项目。</p></blockquote>\n<h1 id=\"先填一下上一篇文章埋下的坑\"><a href=\"#先填一下上一篇文章埋下的坑\" class=\"headerlink\" title=\"先填一下上一篇文章埋下的坑\"></a>先填一下上一篇文章埋下的坑</h1><p>控制台会报错这个问题：</p>\n<p><code>VM19:1 Blocked script execution in &#39;about:blank&#39; because the document&#39;s frame is sandboxed and the &#39;allow-scripts&#39; permission is not set.</code></p>\n<p>解决方法：<br>设置infoBox：false</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const viewer &#x3D; new Cesium.Viewer(&#39;cesiumContainer&#39;, &#123;\n    infoBox: false\n&#125;)</code></pre>\n\n<h1 id=\"使用viet创建react18项目\"><a href=\"#使用viet创建react18项目\" class=\"headerlink\" title=\"使用viet创建react18项目\"></a>使用viet创建react18项目</h1><p><code>pnpm create vite vite+react18+cesium --template react-ts</code></p>\n<p>进入项目 <code>cd vite+react18+cesium</code></p>\n<p>安装依赖 <code>pnpm install</code></p>\n<p>运行项目 <code>pnpm run dev</code></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a122f1eb9ffa422b8b5dc50a573598c4~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=3008&h=1960&s=325749&e=png&a=1&b=242424\" alt=\"image.png\"></p>\n<p>这个就是vite+react18的初始化项目了。下面介绍基于react框架创建cesium项目的两种方式：   </p>\n<ol>\n<li>使用cesium的vite插件 <code>vite-plugin-cesium</code></li>\n<li>把cesium依赖包放到public文件夹下直接引入</li>\n</ol>\n<h1 id=\"第一种方法\"><a href=\"#第一种方法\" class=\"headerlink\" title=\"第一种方法\"></a>第一种方法</h1><h2 id=\"安装vite-plugin-cesium插件\"><a href=\"#安装vite-plugin-cesium插件\" class=\"headerlink\" title=\"安装vite-plugin-cesium插件\"></a>安装<code>vite-plugin-cesium</code>插件</h2><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">npm i cesium vite-plugin-cesium vite -D\n\nyarn add cesium vite-plugin-cesium vite -D</code></pre>\n\n<h2 id=\"在vite-config-js文件中配置使用插件\"><a href=\"#在vite-config-js文件中配置使用插件\" class=\"headerlink\" title=\"在vite.config.js文件中配置使用插件\"></a>在vite.config.js文件中配置使用插件</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; defineConfig &#125; from &#39;vite&#39;\nimport react from &#39;@vitejs&#x2F;plugin-react&#39;\nimport cesium from &#39;vite-plugin-cesium&#39;;\n\n&#x2F;&#x2F; https:&#x2F;&#x2F;vitejs.dev&#x2F;config&#x2F;\nexport default defineConfig(&#123;\n  plugins: [react(),cesium()],\n&#125;)</code></pre>\n\n<h2 id=\"在App组件中初始化Cesium\"><a href=\"#在App组件中初始化Cesium\" class=\"headerlink\" title=\"在App组件中初始化Cesium\"></a>在App组件中初始化Cesium</h2><p>首先清除默认样式，把index.css和App.js里面的默认样式都删除掉</p>\n<p>然后在App.jsx组件中</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">import * as Cesium from &#39;cesium&#39;\nimport &#39;.&#x2F;App.css&#39;\nimport &#123;useEffect&#125; from &quot;react&quot;;\n\nfunction App() &#123;\n    \n    useEffect(() &#x3D;&gt; &#123;\n        &#x2F;&#x2F; 初始化Cesium\n        const viewer &#x3D; new Cesium.Viewer(&#39;cesiumContainer&#39;, &#123;\n            &#x2F;*在给cesium使用html2canvas插件加截图保存控件时，提示错误Blocked script execution in &#39;about:blank&#39; because the document&#39;s frame is sandboxed and the &#39;allow-scripts&#39; permission is not set.*&#x2F;\n            infoBox: false\n        &#125;)\n    &#125;, [])\n\n    return (\n        &lt;div id&#x3D;&quot;cesiumContainer&quot;&#x2F;&gt;\n    );\n&#125;\n\nexport default App</code></pre>\n\n<p>记得设置一下cesiumContainer容器的宽高<br>App.css</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">#cesiumContainer&#123;\n    width: 100vw;\n    height: 100vh;\n&#125;</code></pre>\n\n<p>然后在运行项目打开浏览器就可以看到🌍地球了</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c323812a2bac492a8aaedfa3d10e0338~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=3008&h=1960&s=1915366&e=png&a=1&b=040404\" alt=\"image.png\"></p>\n<h1 id=\"第二种方法\"><a href=\"#第二种方法\" class=\"headerlink\" title=\"第二种方法\"></a>第二种方法</h1><p>第二种方法就是本地引入，把下载好的cesium依赖包（node_modules里面）复制放到public里面， 然后在index.html里面引入cesium和css文件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!doctype html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;\n    &lt;link rel&#x3D;&quot;icon&quot; type&#x3D;&quot;image&#x2F;svg+xml&quot; href&#x3D;&quot;&#x2F;vite.svg&quot; &#x2F;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot; &#x2F;&gt;\n    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;.&#x2F;public&#x2F;cesium&#x2F;Build&#x2F;Cesium&#x2F;Cesium.js&quot;&gt;&lt;&#x2F;script&gt;\n\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;public&#x2F;cesium&#x2F;Build&#x2F;CesiumUnminified&#x2F;Widgets&#x2F;widgets.css&quot;&gt;\n\n    &lt;title&gt;Vite + React&lt;&#x2F;title&gt;\n  &lt;&#x2F;head&gt;\n  &lt;body&gt;\n    &lt;div id&#x3D;&quot;root&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;script type&#x3D;&quot;module&quot; src&#x3D;&quot;&#x2F;src&#x2F;main.jsx&quot;&gt;&lt;&#x2F;script&gt;\n  &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n<p>重要的是这两行</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;.&#x2F;public&#x2F;cesium&#x2F;Build&#x2F;Cesium&#x2F;Cesium.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;public&#x2F;cesium&#x2F;Build&#x2F;CesiumUnminified&#x2F;Widgets&#x2F;widgets.css&quot;&gt;</code></pre>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16827994e4a846a2ac83e1262e2dc164~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=3008&h=1960&s=5817116&e=png&a=1&b=2e2732\" alt=\"image.png\"></p>\n<p>然后同样的，去页面初始化cesium就可以了。</p>\n<h1 id=\"Cesium初始化的配置项说明\"><a href=\"#Cesium初始化的配置项说明\" class=\"headerlink\" title=\"Cesium初始化的配置项说明\"></a>Cesium初始化的配置项说明</h1><p>这是用于配置Cesium三维地球应用程序的选项。以下是各个参数的解释：</p>\n<ol>\n<li>animation：是否显示动画控制器。</li>\n<li>baseLayerPicker：是否允许用户选择基础图层。</li>\n<li>fullscreenButton：是否显示全屏按钮。</li>\n<li>vrButton：是否显示VR按钮。</li>\n<li>geocoder：是否显示地理编码器，或应该包含哪些Geocoder服务对象。</li>\n<li>homeButton：是否显示主页按钮。</li>\n<li>infoBox：是否显示信息框。</li>\n<li>sceneModePicker：是否显示场景模式选择器。</li>\n<li>selectionIndicator：是否显示选择指示器。</li>\n<li>timeline：是否显示时间轴。</li>\n<li>navigationHelpButton：是否显示导航帮助按钮。</li>\n<li>navigationInstructionsInitiallyVisible：在初始加载时，是否自动显示导航说明。</li>\n<li>scene3DOnly：是否禁用2D地图模式。</li>\n<li>shouldAnimate：是否自动运行动画。</li>\n<li>clockViewModel：ClockViewModel对象，用于控制时间和动画。</li>\n<li>selectedImageryProviderViewModel：当前选择的图像提供者。</li>\n<li>imageryProviderViewModels：可用图像提供者。</li>\n<li>selectedTerrainProviderViewModel：当前选择的地形提供者。</li>\n<li>terrainProviderViewModels：可用地形提供者。</li>\n<li>baseLayer：ImageryLayer对象，用于设置基础图层。</li>\n<li>terrainProvider：TerrainProvider对象，用于设置地形提供者。</li>\n<li>terrain：Terrain对象，用于控制地形的外观和行为。</li>\n<li>skyBox：SkyBox对象，用于控制天空盒的外观和行为。</li>\n<li>skyAtmosphere：SkyAtmosphere对象，用于控制大气影响的外观和行为。</li>\n<li>fullscreenElement：全屏元素。</li>\n<li>useDefaultRenderLoop：是否使用Cesium的默认渲染循环。</li>\n<li>targetFrameRate：目标帧速率，以帧/秒为单位。</li>\n<li>showRenderLoopErrors：是否在控制台输出渲染循环错误消息。</li>\n<li>useBrowserRecommendedResolution：是否使用浏览器建议的分辨率。</li>\n<li>automaticallyTrackDataSourceClocks：是否自动跟踪数据源时钟。</li>\n<li>contextOptions：WebGL上下文选项。</li>\n<li>sceneMode：场景模式（2D、3D或双眼立体）。</li>\n<li>mapProjection：地图投影类型。</li>\n<li>globe：Globe对象，用于控制球形地球的外观和行为。</li>\n<li>orderIndependentTranslucency：是否启用无序透明度。</li>\n<li>creditContainer：显示版权信息的元素。</li>\n<li>creditViewport：版权信息元素的视口。</li>\n<li>dataSources：DataSourceCollection对象，表示要可视化的数据源集合。</li>\n<li>shadows：是否启用阴影。</li>\n<li>terrainShadows：地形阴影类型。</li>\n<li>mapMode2D：2D地图模式下地图行为。</li>\n<li>projectionPicker：是否显示投影选择器。</li>\n<li>blurActiveElementOnCanvasFocus：获取焦点时是否模糊当前活动元素。</li>\n<li>requestRenderMode：渲染模式（RENDER_ONCE、ANIMATE、SCENE2D、SCENE3D和MORPH）。</li>\n<li>maximumRenderTimeChange：每帧允许的最大渲染时间（毫秒）。</li>\n<li>depthPlaneEllipsoidOffset：深度平面和椭球体之间的偏移量。</li>\n<li>msaaSamples：抗锯齿采样级别。</li>\n</ol>\n<p>希望可以帮助各位小伙伴在开发web 3D项目的时候有一点帮助</p>\n","feature":false,"text":"前言 书接上文，上篇文章介绍了《使用Vite+Vue3创建Cesium项目》，感觉还是对很多小伙伴有帮助的，那么这篇文章就介绍一下使用Vite+React18创建Cesium项目。 先填一下上一篇文章埋下的坑控制台会报错这个问题： VM19:1 Blocked script ex...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"react","slug":"react","count":3,"path":"api/categories/react.json"}],"tags":[{"name":"cesium","slug":"cesium","count":2,"path":"api/tags/cesium.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%88%E5%A1%AB%E4%B8%80%E4%B8%8B%E4%B8%8A%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%9F%8B%E4%B8%8B%E7%9A%84%E5%9D%91\"><span class=\"toc-text\">先填一下上一篇文章埋下的坑</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8viet%E5%88%9B%E5%BB%BAreact18%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">使用viet创建react18项目</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">第一种方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85vite-plugin-cesium%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装vite-plugin-cesium插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8vite-config-js%E6%96%87%E4%BB%B6%E4%B8%AD%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">在vite.config.js文件中配置使用插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8App%E7%BB%84%E4%BB%B6%E4%B8%AD%E5%88%9D%E5%A7%8B%E5%8C%96Cesium\"><span class=\"toc-text\">在App组件中初始化Cesium</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">第二种方法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Cesium%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">Cesium初始化的配置项说明</span></a></li></ol>","author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"mapped":true,"prev_post":{"title":"我在国企的那些日子","uid":"96d83872ad7618027388d39263338070","slug":"年终总结/我在国企的那些日子","date":"2022-09-01T15:11:46.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/年终总结/我在国企的那些日子.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/10.png","text":"todo","link":"","photos":[],"count_time":{"symbolsCount":4,"symbolsTime":"1 mins."},"categories":[{"name":"工作感悟","slug":"工作感悟","count":2,"path":"api/categories/工作感悟.json"}],"tags":[{"name":"工作感悟 国企","slug":"工作感悟-国企","count":1,"path":"api/tags/工作感悟-国企.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":false},"next_post":{"title":"如何使用node操作sqlite","uid":"2fb96575f2877512c0acb0b5dc6b763c","slug":"node/如何使用node操作sqlite","date":"2022-07-19T02:46:35.000Z","updated":"2024-12-25T06:40:06.000Z","comments":true,"path":"api/articles/node/如何使用node操作sqlite.json","keywords":"前端少年汪,前端,后端,全栈工程师,程序员,vue,react,Golang,Java,JavaScript,Python,frontendBoy-Wang","cover":"../img/39.png","text":"什么是sqlitSQLite是一种轻量级的嵌入式关系型数据库管理系统，它以库的形式存在，可以嵌入到应用程序中。它使用简单的、基于文件的数据库格式，不需要独立的服务器进程，非常适合在资源有限的环境中使用。 SQLite的优点 简单易用：SQLite的API简单明了，学习曲线低，使用...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"node","slug":"node","count":2,"path":"api/categories/node.json"}],"tags":[{"name":"node slq","slug":"node-slq","count":1,"path":"api/tags/node-slq.json"}],"author":{"name":"前端少年汪","slug":"blog-author","avatar":"https://p3-passport.byteimg.com/img/user-avatar/46cf67c329246db441271a06f6132633~100x100.awebp","link":"/","description":"一个追逐技术的全栈工程师 <br /> @ <b>公众号：前端少年汪</b>","socials":{"github":"https://github.com/frontendBoy-Wang","twitter":"","stackoverflow":"https://stackoverflow.com/users/16856904/frontendboy-wang","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/qian-ke-sao-ren-wmq","csdn":"https://blog.csdn.net/qq_44647871?spm=1010.2135.3001.5421","juejin":"https://juejin.cn/user/3570847174897447","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/392982262"}}}},"feature":false}}